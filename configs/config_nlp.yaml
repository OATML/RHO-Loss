# @package _global_
mode:
    training_mode: "curriculm"
    
# specify here default training configuration
defaults:
  - model: multi_model_nlp.yaml
  - model_large_model_nlp: nlp_GLUETransformer.yaml
  - optimizer: adamw.yaml
  - trainer: default.yaml
  - datamodule: nlp_GLUEDataModule.yaml
  - selection_method_nlp: reducible_loss_selection.yaml
  - callbacks: default.yaml # set this to null if you don't want to use callbacks
  - logger: wandb.yaml # set logger here or use command line (e.g. `python run.py logger=wandb`)
  # - experiment: null
  # - hparams_search: null
  - hydra: default.yaml
  - irreducible_loss_generator: precomputed_loss.yaml
  # enable color logging
  - override hydra/hydra_logging: colorlog
  - override hydra/job_logging: colorlog
  - _self_

datamodule:
  train_batch_size: 320
#   trainset_data_aug: True

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}

# use `python run.py debug=true` for easy debugging!
# this will run 1 train, val and test loop with only 1 batch
# equivalent to running `python run.py trainer.fast_dev_run=true`
# (this is placed here just for easier access from command line)
debug: False

# pretty print config at the start of the run using Rich library
print_config: True

# disable python warnings if they annoy you
ignore_warnings: True

# check performance on test set, using the best model achieved during training
# lightning chooses best model based on metric specified in checkpoint callback
test_after_training: True

seed: 12

base_outdir: logs

eval_set: test  #val or test